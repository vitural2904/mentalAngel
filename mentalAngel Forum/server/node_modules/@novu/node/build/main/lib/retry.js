"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.defaultRetryCondition = exports.makeRetryable = exports.RETRYABLE_HTTP_CODES = void 0;
var axios_retry_1 = __importStar(require("axios-retry"));
var uuid_1 = require("uuid");
exports.RETRYABLE_HTTP_CODES = [408, 422, 429];
var NON_IDEMPOTENT_METHODS = ['post', 'patch'];
var IDEMPOTENCY_KEY = 'Idempotency-Key';
var DEFAULT_RETRY_MAX = 0;
var DEFAULT_WAIT_MIN = 1;
var DEFAULT_WAIT_MAX = 30;
function makeRetryable(axios, config) {
    axios.interceptors.request.use(function (axiosConfig) {
        if (axiosConfig.method &&
            NON_IDEMPOTENT_METHODS.includes(axiosConfig.method)) {
            var idempotencyKey = axiosConfig.headers[IDEMPOTENCY_KEY];
            if (idempotencyKey) {
                return axiosConfig;
            }
            axiosConfig.headers[IDEMPOTENCY_KEY] = (0, uuid_1.v4)();
        }
        return axiosConfig;
    });
    var retryConfig = (config === null || config === void 0 ? void 0 : config.retryConfig) || {};
    var retries = retryConfig.retryMax || DEFAULT_RETRY_MAX;
    var minDelay = retryConfig.waitMin || DEFAULT_WAIT_MIN;
    var maxDelay = retryConfig.waitMax || DEFAULT_WAIT_MAX;
    var initialDelay = retryConfig.initialDelay || minDelay;
    var retryCondition = retryConfig.retryCondition || defaultRetryCondition;
    function backoff(retryCount) {
        if (retryCount === 1) {
            return initialDelay;
        }
        var delay = retryCount * minDelay;
        if (delay > maxDelay) {
            return maxDelay;
        }
        return delay;
    }
    (0, axios_retry_1.default)(axios, {
        retries: retries,
        retryCondition: retryCondition,
        retryDelay: function (retryCount) {
            return backoff(retryCount) * 1000;
        },
        onRetry: function (_retryCount, error, requestConfig) {
            var _a;
            if (((_a = error.response) === null || _a === void 0 ? void 0 : _a.status) === 422 &&
                requestConfig.headers &&
                requestConfig.method &&
                NON_IDEMPOTENT_METHODS.includes(requestConfig.method)) {
                requestConfig.headers[IDEMPOTENCY_KEY] = (0, uuid_1.v4)();
            }
        },
    });
}
exports.makeRetryable = makeRetryable;
function defaultRetryCondition(err) {
    if ((0, axios_retry_1.isNetworkError)(err)) {
        return true;
    }
    if (err.response &&
        err.response.status >= 500 &&
        err.response.status <= 599) {
        return true;
    }
    if (err.response && exports.RETRYABLE_HTTP_CODES.includes(err.response.status)) {
        return true;
    }
    return false;
}
exports.defaultRetryCondition = defaultRetryCondition;
